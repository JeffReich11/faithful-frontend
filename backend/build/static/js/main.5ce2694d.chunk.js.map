{"version":3,"sources":["stores/userStores.js","inputField.js","submitButton.js","loginForm.js","App.js","reportWebVitals.js","index.js"],"names":["extendObservable","this","loading","isLoggedIn","username","InputField","className","type","props","placeholder","value","onchange","e","onChange","target","React","Component","SubmitButton","disabled","onClick","text","LoginForm","state","password","buttonDisabled","property","val","trim","length","setState","fetch","method","headers","body","JSON","stringify","res","json","result","success","UserStore","resetForm","alert","msg","console","log","setInputValue","doLogin","App","isLogedIn","doLogout","observer","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.5ce2694d.chunk.js","sourcesContent":["import { extendObservable } from 'mobx' ;\n\nclass UserStore {\n    constructor() {\n        extendObservable(this, {\n\n            loading: true,\n            isLoggedIn: false,\n            username: ''\n       \n        })\n    }\n}\n\nexport default new UserStore();","import React from 'react';\n\n\nclass InputField extends React.Component {\n  render() {\n  return (\n    <div className=\"inputField\">\n\n      <input\n        className='input'\n        type={this.props.type}\n        placeholder={this.props.placeholder}\n        value={this.props.value}\n        onchange={ (e) => this.props.onChange(e.target.value) }\n        />\n      \n    </div>\n  );\n  }\n}\n\nexport default InputField;\n","import React from 'react';\n\n\nclass SubmitButton extends React.Component {\n  render() {\n  return (\n    <div className=\"submitButton\">\n\n      <button\n          className='btn'\n          disabled={this.props.disabled}\n          onClick={ () => this.props.onClick() }\n\n      >\n            {this.props.text}\n      </button>\n      \n    </div>\n  );\n  }\n}\n\nexport default SubmitButton;\n","import React from 'react';\nimport InputField from './inputField';\nimport SubmitButton from './submitButton';\nimport UserStore from './stores/userStores';\n\n\nclass LoginForm extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      username: '',\n      password: '',\n      buttonDisabled: false\n    }\n}\n\nsetInputValue(property, val){\n  val = val.trim();\n  if (val.length > 12){\n    return;\n  }\n  this.setState({\n    [property]: val\n  })\n}\n\nresetForm() {\n  this.setState({\n    username: '',\n    password: '',\n    buttonDisabled: false\n\n  })\n}\n\nasync doLogin(){\n\n    if (!this.state.username) {\n        return;\n    }\n    if (!this.state.password) {\n\n    }\n\n    this.setState({\n      buttonDisabled: true\n    })\n\n    try {\n\n        let res = await fetch('/login', {\n          method: 'post',\n          headers: {\n                'Accept': 'appliction/json',\n                'content-Type': 'application/json'\n          },\n          body: JSON.stringify({\n            username: this.state.username,\n            password: this.state.password\n\n          })\n        });\n        let result = await res.json();\n        if (result && result.success) {\n          UserStore.isLoggedIn = true;\n          UserStore.username = result.username;\n        }\n\n        else if (result && result.success === false) {\n          this.resetForm();\n          alert(result.msg);\n        }\n\n    }\n\n    catch(e){\n      console.log(e);\n      this.resetForm();\n    }\n\n}\n\n  render() {\n  return (\n    <div className=\"loginForm\">\n      \n        Log in\n        <InputField\n            type='text'\n            placeholder='Username'\n            value={this.state.username ? this.state.username : ''}\n            onChange={ (val) => this.setInputValue ('username', val)  }\n        />\n\n        <InputField\n            type='password'\n            placeholder='Password'\n            value={this.state.password ? this.state.password : ''}\n            onChange={ (val) => this.setInputValue ('password', val)  }\n        />\n\n        <SubmitButton\n            text='Login'\n            disabled={this.state.buttonDisabled}\n            onClick={ () => this.doLogin() }\n\n        />\n\n    </div>\n  );\n  }\n}\n\nexport default LoginForm;\n","import React from 'react';\nimport { observer } from 'mobx-react';\nimport UserStore from '../src/stores/userStores';\nimport LoginForm from '../src/loginForm';\nimport SubmitButton from '../src/submitButton';\nimport './App.css';\n\nclass App extends React.Component {\n  \n    async componentDidMount() {\n\n      try {\n\n        let res = await fetch('/isLoggedIn', {\n          method: 'post',\n          headers: {\n            'Accept' : 'application/json',\n            'Content-Type': 'appliction/json'\n          }\n        });\n        \n        let result = await res.json();\n\n        if (result && result.success) {\n          UserStore.loading = false;\n          UserStore.isLoggedIn = true;\n          UserStore.username = result.username;\n        }\n\n        else {\n          UserStore.loading = false;\n          UserStore.isLogedIn = false;\n        }\n\n      }\n\n      catch(e){\n        UserStore.loading = false;\n        UserStore.isLoggedIn = false;\n      }\n\n    }\n  \n    async doLogout() {\n\n      try {\n\n        let res = await fetch('/logout', {\n          method: 'post',\n          headers: {\n            'Accept' : 'application/json',\n            'Content-Type': 'appliction/json'\n          }\n        });\n        \n        let result = await res.json();\n\n        if (result && result.success) {\n          UserStore.isLoggedIn = false;\n          UserStore.username = '';\n          \n         \n        \n        }\n\n      }\n\n      catch(e){\n        console.log(e)\n      }\n\n    }\n\n  render() {\n\n    if (UserStore.loading) {\n      return (\n        <div className=\"App\">\n      <div className='container'>\n        Loading, please wait..\n        </div>\n    </div>\n    \n      )}\n\n    else {\n\n        if (UserStore.isLoggedIn) {\n          return (\n            <div className=\"App\">\n          <div className='container'>\n            Welcome {UserStore.username}\n\n            <SubmitButton\n              text={'Log out'}\n              disabled={false}\n              onClick={ () => this.doLogout () }\n            />\n\n            </div>\n        </div>\n          );\n    }\n  \n\n  return (\n    <div className=\"App\">\n      <div className='container'>\n      <LoginForm />\n      </div>\n    </div>\n  );\n  };\n  }\n}\n\nexport default observer (App);\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}